name: CI

on: [push, pull_request]

jobs:
  multitest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.7", "3.10",]
        torch-version: ["1.8.1", "1.12.0",]
        exclude:
          - os: ubuntu-latest
            python-version: "3.10"
            torch-version: "1.8.1"
          - os: windows-latest
            python-version: "3.10"
            torch-version: "1.8.1"
          - os: ubuntu-latest
            python-version: "3.7"
            torch-version: "1.12.0"
          - os: windows-latest
            python-version: "3.7"
            torch-version: "1.12.0"  
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install torch~=${{ matrix.torch-version }} torchvision --index-url https://download.pytorch.org/whl/cpu
          pip install .
          pip install -r tests/requirements.txt
      - name: Test with pytest
        run: |
          pytest tests
        env:
            CI: true

  coverage:
    needs: multitest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Generate coverage report
        run: |
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
          pip install -r tests/requirements.txt
          pip install .
          coverage run -m pytest tests
          coverage xml
      - name: Upload coverage to Codecov
        uses: insightsengineering/coverage-action@v2
        with:
          # Path to the Cobertura XML report.
          path: ./coverage.xml
          # Minimum total coverage, if you want the workflow to enforce it as a standard.
          # This has no effect if the `fail` arg is set to `false`.
          threshold: 60.00
          fail: true
          # Publish the rendered output as a PR comment
          publish: true
          # Create a coverage diff report.
          diff: true
          # Branch to diff against.
          # Compare the current coverage to the coverage determined on this branch.
          diff-branch: main
          # This is where the coverage reports for the `diff-branch` are stored.
          # Branch is created if it doesn't already exist'.
          diff-storage: _xml_coverage_reports
        
  documentation:
    needs: multitest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
          pip install .
          pip install -r docs/requirements.txt
      - name: Build documentation
        run: |
          cd docs && make clean && make html # Use SPHINXOPTS="-W" to fail on warning.
          
  build-and-publish:
    needs: documentation
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install build packages
        run: pip install wheel pbr setuptools
      - name: Build a binary wheel and a source tarball
        run: python setup.py sdist bdist_wheel
      - name: Publish distribution package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_DEPLOYMENT }}
          skip_existing: true
      - name: Github release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
